============================================================================================
Part 1: Pull Resource and Open JMeter TestPlan for Adjust Destination
============================================================================================
1. (Load Test Machine) Pull Github file command: 
    cd ~
    sudo rm -rf ./jmeter-workshop-062019
    git clone https://github.com/praparn/jmeter-workshop-062019.git

2. (Load Test Machine) In case UltraVNC is cannot connect. Kill and recreate vnc session by command:
    vncserver -kill :1
    vncserver -geometry 1600x900 :1

3. (Load Test Machine) Open Jmeter GUI (If disapper. Please run
   sed -i -e 's/"${HEAP:="-Xms1g -Xmx1g -XX:MaxMetaspaceSize=256m"}"/"${HEAP:="-Xms2g -Xmx2g -XX:MaxMetaspaceSize=512m"}"/g' /home/ubuntu/apache-jmeter-5.1.1/bin/jmeter
   /home/ubuntu/apache-jmeter-5.1.1/bin/jmeter

4. (Load Test Machine) Open test plan on path: /home/ubuntu/jmeter-workshop-062019/Workshop-2-6-Docker/jmeter/Advance_FirstPage.jmx
    Thread Group:
        Number of Threads (users): 200
        Ramp-Up Periods (in seconds): 10
        Loop Count: 10

    User Defined Variable:
        BASE_URL_1: <IP of Server Machine>

5. (Load Test Machine) Test run testplan in GUI mode for confirmation (30 seconds) and close testplan

6. (Load Test Machine) Stop GUI Jmeter for prepare run on batch mode

============================================================================================
Part 2: Build Image of Docker for JMeter
============================================================================================
1. (Load Test Machine) Build docker image for JMeter by command:
    cd ~/jmeter-workshop-062019/Workshop-2-6-Docker/dockerfile
    docker build -t jmeter ./

2. (Load Test Machine) Check image by command: docker image ls

3. (Load Test Machine) Create docker network and access to share testplan path by command:
    docker network create --driver bridge \
    --subnet=192.168.100.0/24 --gateway=192.168.100.5 --opt="com.docker.network.mtu"="1500" jmeternet

4. (Load Test Machine) Run 3 jmeter server and 1 jmeter client for generate load by command:
    cd ~/jmeter-workshop-062019/Workshop-2-6-Docker/
    chmod +x ./init.sh
    ./init.sh

5. (Load Test Machine) Monitor process via HTOP/Top until finished:
   
6. (Load Test Machine) Check result:
    ls ~/jmeter-workshop-062019/Workshop-2-6-Docker/result/server   ==> View Log of Each Server
    ls ~/jmeter-workshop-062019/Workshop-2-6-Docker/result/client   ==> View Log of Each Client

7. (Load Test Machine) Open JMeter for Check Listener Result:
    /home/ubuntu/apache-jmeter-5.1.1/bin/jmeter

8. (Load Test Machine) Clear up network by command: docker network rm jmeternet